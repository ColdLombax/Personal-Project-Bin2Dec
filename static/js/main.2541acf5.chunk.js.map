{"version":3,"sources":["App.module.scss","components/Background/Background.js","App.js","index.js","components/Background/Background.module.scss"],"names":["module","exports","Background","className","classes","background","blur","App","useState","binary","setBinary","decimal","setDecimal","error","setError","isBinary","setIsBinary","messages","input","waiting","convBinary","value","convDecimal","invalid","useEffect","digit","parseInt","toString","convertBinary","convertDecimal","result","inputs","type","onChange","event","stringNumber","target","RegExp","test","content","title","description","main","stamp","style","color","onClick","btn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,qBAAqB,MAAQ,mBAAmB,YAAc,yBAAyB,KAAO,kBAAkB,MAAQ,mBAAmB,QAAU,qBAAqB,MAAQ,mBAAmB,MAAQ,mBAAmB,MAAQ,mBAAmB,IAAM,mB,sICU9QC,EATI,WACjB,OACE,gCACE,qBAAKC,UAAWC,IAAQC,aACxB,qBAAKF,UAAWC,IAAQE,W,gBCgHfC,MAhHf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEMC,EAAW,CACfC,MAAO,mBAAGf,UAAWC,IAAQe,QAAtB,kCACPC,WAAY,mBAAGjB,UAAWC,IAAQiB,MAAtB,SAA8BV,IAC1CW,YAAa,mBAAGnB,UAAWC,IAAQiB,MAAtB,SAA8BZ,IAC3Cc,QAAS,mBAAGpB,UAAWC,IAAQS,MAAtB,oCA4BXW,qBAAU,YACHX,GAASE,EANM,WACpB,IAAMU,EAAQC,SAASjB,EAAQ,GAC/BG,EAAWa,EAAME,YAKfC,GACUf,GAAUE,GACpBc,MAED,CAACpB,EAAQE,IAGZ,IAIMkB,EAAiB,WACrB,IACMC,EADSJ,SAASf,GACFgB,SAAS,GAC/BjB,EAAUoB,IAGNC,EAAS,CACbtB,OACE,uBACEuB,KAAK,SACLX,MAAOZ,EACPwB,SAzCgB,SAACC,GACrB,IAAMC,EAAeD,EAAME,OAAOf,MAClB,IAAIgB,OAAO,SACfC,KAAKH,GACfrB,GAAS,GAETA,GAAS,GAGXJ,EAAUwB,EAAME,OAAOf,QAiCnBlB,UAAWC,IAAQc,QAGvBP,QACE,uBACEqB,KAAK,SACLX,MAAOV,EACPsB,SAvBiB,SAACC,GACtBtB,EAAWsB,EAAME,OAAOf,QAuBpBlB,UAAWC,IAAQc,SAKzB,OACE,gCACE,cAAC,EAAD,IACA,sBAAKf,UAAWC,IAAQmC,QAAxB,UACE,mCACE,oBAAIpC,UAAWC,IAAQoC,MAAvB,SACGzB,EAAW,aAAe,eAE7B,oBAAGZ,UAAWC,IAAQqC,YAAtB,qBACW1B,EAAW,SAAW,UADjC,yBAEGA,EAAW,UAAY,iBAG5B,0BAASZ,UAAWC,IAAQsC,KAA5B,UACG3B,GAAYgB,EAAOtB,QAClBM,GAAYgB,EAAOpB,QACpBE,GAASI,EAASM,QAClBZ,GAAW,GAAKI,GAAYE,EAASG,WACrCX,GAAU,IAAMM,GAAYE,EAASK,YAC1B,KAAXb,GAAiBQ,EAASC,MACd,KAAZP,GAAkBM,EAASC,SAE9B,mCACE,oBAAGf,UAAWC,IAAQuC,MAAtB,uBACY,sBAAMC,MAAO,CAAEC,MAAM,qBAArB,oBADZ,sBAIA,wBAAQC,QA1FK,WACnB9B,GAAaD,GACbL,EAAU,IACVE,EAAW,IACXE,GAAS,IAsF4BX,UAAWC,IAAQ2C,IAAlD,SACGhC,EAAW,UAAY,qBCvGpCiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCV1BpD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,4B","file":"static/js/main.2541acf5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__1L0My\",\"title\":\"App_title__2fonY\",\"description\":\"App_description__1s1A9\",\"main\":\"App_main__3iCDu\",\"input\":\"App_input__VCt30\",\"waiting\":\"App_waiting__lFitv\",\"error\":\"App_error__P1EOt\",\"value\":\"App_value__37v1Z\",\"stamp\":\"App_stamp__1ac3c\",\"btn\":\"App_btn__2f8K_\"};","import classes from \"./Background.module.scss\";\r\n\r\nconst Background = () => {\r\n  return (\r\n    <div>\r\n      <div className={classes.background}></div>\r\n      <div className={classes.blur}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Background;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport Background from \"./components/Background/Background\";\r\n\r\nimport classes from \"./App.module.scss\";\r\n\r\nfunction App() {\r\n  const [binary, setBinary] = useState(\"\");\r\n  const [decimal, setDecimal] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [isBinary, setIsBinary] = useState(true);\r\n\r\n  const messages = {\r\n    input: <p className={classes.waiting}>Waiting for Input...</p>,\r\n    convBinary: <p className={classes.value}>{decimal}</p>,\r\n    convDecimal: <p className={classes.value}>{binary}</p>,\r\n    invalid: <p className={classes.error}>Invalid Binary Number</p>,\r\n  };\r\n\r\n  const clickHandler = () => {\r\n    setIsBinary(!isBinary);\r\n    setBinary(\"\");\r\n    setDecimal(\"\");\r\n    setError(false);\r\n  };\r\n\r\n  // *** BINARY CONVERSTION HANDLERS ***\r\n  const binaryHandler = (event) => {\r\n    const stringNumber = event.target.value;\r\n    const pattern = new RegExp(\"[2-9]\");\r\n    if (pattern.test(stringNumber)) {\r\n      setError(true);\r\n    } else {\r\n      setError(false);\r\n    }\r\n\r\n    setBinary(event.target.value);\r\n  };\r\n\r\n  const convertBinary = () => {\r\n    const digit = parseInt(binary, 2);\r\n    setDecimal(digit.toString());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!error && isBinary) {\r\n      convertBinary();\r\n    } else if (!error && !isBinary) {\r\n      convertDecimal();\r\n    }\r\n  }, [binary, decimal]);\r\n\r\n  // *** DECIMAL CONVERSTION HANDLERS ***\r\n  const decimalHandler = (event) => {\r\n    setDecimal(event.target.value);\r\n  };\r\n\r\n  const convertDecimal = () => {\r\n    const number = parseInt(decimal);\r\n    const result = number.toString(2);\r\n    setBinary(result);\r\n  };\r\n\r\n  const inputs = {\r\n    binary: (\r\n      <input\r\n        type=\"number\"\r\n        value={binary}\r\n        onChange={binaryHandler}\r\n        className={classes.input}\r\n      ></input>\r\n    ),\r\n    decimal: (\r\n      <input\r\n        type=\"number\"\r\n        value={decimal}\r\n        onChange={decimalHandler}\r\n        className={classes.input}\r\n      ></input>\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Background />\r\n      <div className={classes.content}>\r\n        <header>\r\n          <h1 className={classes.title}>\r\n            {isBinary ? \"Bin\\\\2/Dec\" : \"Dec\\\\2/Bin\"}\r\n          </h1>\r\n          <p className={classes.description}>\r\n            Enter a {isBinary ? \"Binary\" : \"Decimal\"} number, converts into\r\n            {isBinary ? \" Binary\" : \" Decimal\"}\r\n          </p>\r\n        </header>\r\n        <section className={classes.main}>\r\n          {isBinary && inputs.binary}\r\n          {!isBinary && inputs.decimal}\r\n          {error && messages.invalid}\r\n          {decimal > -1 && isBinary && messages.convBinary}\r\n          {binary > -1 && !isBinary && messages.convDecimal}\r\n          {binary === \"\" && messages.input}\r\n          {decimal === \"\" && messages.input}\r\n        </section>\r\n        <footer>\r\n          <p className={classes.stamp}>\r\n            Made with <span style={{ color: `rgb(116, 50, 163)` }}>‚ù§</span> -\r\n            John Phillips\r\n          </p>\r\n          <button onClick={clickHandler} className={classes.btn}>\r\n            {isBinary ? \"DECIMAL\" : \"BINARY\"}\r\n          </button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Background_background__EE9qb\",\"blur\":\"Background_blur__1YKhR\"};"],"sourceRoot":""}